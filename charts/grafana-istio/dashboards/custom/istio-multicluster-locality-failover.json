{
  "__inputs": [
    {
      "name": "DS_PROMETHEUS",
      "label": "Prometheus",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.3.0"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Monitor if circuit breaking occurred and traffic flowed to a different cluster. Especially useful for fail over scenarios.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "This panel provide a view of requests directed to clusters other than Source Cluster selected above.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [
            {
              "options": {
                "pattern": "^5.*$",
                "result": {
                  "color": "red",
                  "index": 0
                }
              },
              "type": "regex"
            },
            {
              "options": {
                "pattern": "^[^5].*$",
                "result": {
                  "color": "yellow",
                  "index": 1
                }
              },
              "type": "regex"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "response_code"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "applyToRow": true,
                  "mode": "gradient",
                  "type": "color-background"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "response_flags"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Envoy Response Flags",
                    "url": "https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-response-flags"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "interval": "5m",
      "links": [
        {
          "targetBlank": true,
          "title": "Envoy Response Flags",
          "url": "https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-response-flags"
        }
      ],
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Time"
          }
        ]
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "disableTextWrap": false,
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum by(source_cluster, destination_cluster, destination_service, response_code, response_flags, source_app) (increase(istio_requests_total{namespace=~\"$namespace\", source_cluster=~\"$source_cluster\", destination_cluster!~\"$source_cluster\", source_app=~\"$source_app\", destination_service=~\"$destination_service\", response_flags=~\"$response_flags\",response_code=~\"$response_code\"}[$__interval])) > 0",
          "format": "table",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A",
          "useBackend": false,
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          }
        }
      ],
      "title": "Locality Failover",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": false
            },
            "includeByName": {},
            "indexByName": {
              "Time": 0,
              "Value": 7,
              "destination_cluster": 3,
              "destination_service": 4,
              "response_code": 5,
              "response_flags": 6,
              "source_app": 2,
              "source_cluster": 1
            },
            "renameByName": {
              "Time": "",
              "Value": "Number of Requests per Interval",
              "destination_cluster": "Destination Cluster",
              "destination_service": "Destination Service",
              "response_code": "HTTP Response Code",
              "response_flags": "Envoy Response Flag",
              "source_app": "Source Application Name",
              "source_cluster": "Source Cluster"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "Graphical representation of the table above.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum by(source_cluster, destination_cluster, destination_service, response_code, response_flags, source_app) (increase(istio_requests_total{namespace=~\"$namespace\", source_cluster=~\"$source_cluster\", destination_cluster!~\"$source_cluster\", source_app=~\"$source_app\", destination_service=~\"$destination_service\", response_flags=~\"$response_flags\",response_code=~\"$response_code\"}[1m])) > 0",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A",
          "useBackend": false
        }
      ],
      "title": "Locality Failover",
      "type": "timeseries"
    }
  ],
  "refresh": "auto",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "name": "datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allValue": ".*",
        "current": {},
        "definition": "label_values(istio_requests_total,namespace)",
        "description": "",
        "includeAll": true,
        "label": "Namespace",
        "name": "namespace",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(istio_requests_total,namespace)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "allValue": ".*",
        "current": {},
        "definition": "label_values(istio_requests_total{namespace=~\"$namespace\"},source_cluster)",
        "description": "Where the request originated.",
        "includeAll": false,
        "label": "Source Cluster",
        "name": "source_cluster",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(istio_requests_total{namespace=~\"$namespace\"},source_cluster)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "allValue": ".*",
        "current": {},
        "definition": "label_values(istio_requests_total{namespace=~\"$namespace\"},source_app)",
        "includeAll": true,
        "multi": true,
        "name": "source_app",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(istio_requests_total{namespace=~\"$namespace\"},source_app)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "allValue": ".*",
        "current": {},
        "definition": "label_values(istio_requests_total{namespace=~\"$namespace\"},destination_service)",
        "includeAll": true,
        "multi": true,
        "name": "destination_service",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(istio_requests_total{namespace=~\"$namespace\"},destination_service)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "allValue": ".*",
        "current": {},
        "definition": "label_values(istio_requests_total{namespace=~\"$namespace\"},response_code)",
        "includeAll": true,
        "multi": true,
        "name": "response_code",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(istio_requests_total{namespace=~\"$namespace\"},response_code)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "allValue": ".*",
        "current": {},
        "definition": "label_values(istio_requests_total{namespace=~\"$namespace\"},response_flags)",
        "includeAll": true,
        "multi": true,
        "name": "response_flags",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(istio_requests_total{namespace=~\"$namespace\"},response_flags)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "baseFilters": [],
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "filters": [],
        "name": "Filters",
        "type": "adhoc"
      }
    ]
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Istio Multicluster Locality Failover",
  "uid": "cexkgqwmeal8ge",
  "version": 26,
  "weekStart": ""
}