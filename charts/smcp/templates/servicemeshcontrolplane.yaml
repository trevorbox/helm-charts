---
apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: {{ .Values.smcp.name }}
spec:
  version: {{ .Values.smcp.version }}
  mode: {{ .Values.smcp.mode }}
  {{- if or (eq .Values.smcp.mode "ClusterWide") (.Values.tempo.enabled) }}
  meshConfig:
    {{- if eq .Values.smcp.mode "ClusterWide" }}
    discoverySelectors:
      - matchLabels:
          {{- .Values.namespaceMemberSelector | toYaml | nindent 10 }}
    {{- end }}
    {{- if .Values.tempo.enabled }}
    extensionProviders:
      - name: tempo
        opentelemetry:
          service: {{ .Values.tempo.host }}
          port: 4317
    {{- end }}
  {{- end }}
  tracing:
    sampling: 10000
    type: None
  security:
    dataPlane:
      mtls: true
      automtls: true
    controlPlane:
      mtls: true
  proxy:
    {{- if .Values.smcp.accessLoggingEnabled }}
    accessLogging:
      file:
        name: /dev/stdout
    {{- end }}
    networking:
      trafficControl:
        outbound:
          policy: {{ .Values.smcp.outboundPolicy }}
  gateways:
    enabled: false
    egress:
      enabled: false
    ingress:   
      enabled: false
    openshiftRoute:
      enabled: false
  addons:
    grafana:
      enabled: false
    kiali:
      {{- with .Values.kiali }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
    prometheus:
      enabled: false
  runtime:
    components:
      pilot:
        deployment:
          replicas: {{ .Values.istiod.replicas }}
        {{- if eq .Values.smcp.mode "ClusterWide" }}
        container:
          env:
            ENABLE_ENHANCED_RESOURCE_SCOPING: 'true'
        {{- end }}
